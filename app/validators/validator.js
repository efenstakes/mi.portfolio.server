// export external libraries
const { check, validationResult } = require('express-validator')

// import internal modules


// format errors that are generated by express validator 
const error_formatter = ({ location, msg, param, value, nestedErrors }) => {
    return { field: param, error: msg }
};


// checks if req parameters required are passed 
const check_request_data = async (req, res, next) => {
    let response = { errors: [] }

    console.log('check_request_data')
    console.log(req.body)

    // check for errors
    let errors = validationResult(req).formatWith(error_formatter)
    if (!errors.isEmpty()) {
        response.errors = errors.array()
        return res.json(response)
    }

    next()
};



const contact_me = [

    check('email')
        .exists().withMessage('Email must be provided')
        .isEmail().withMessage('Email provided must be valid'),

    check('name')
        .exists().withMessage('Name must be provided')
        .isLength({ min: 4, max: 15 }).withMessage('Name provided must be 4 - 15 characters long'),

    check('description')
        .exists().withMessage('Description must be provided'),
        // .isLength({ min: 10, max: 100 }).withMessage('Expectations provided must be 10 numbers long'),

]

module.exports = {
    contact_me,
    check_request_data,
}